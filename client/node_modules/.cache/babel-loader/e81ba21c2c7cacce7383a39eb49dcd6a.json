{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA7XPj2zFd26B9bh_zDQ2aDf38uACH3dYI\",\n  authDomain: \"reachzone-a5637.firebaseapp.com\",\n  databaseURL: \"https://reachzone-a5637.firebaseio.com\",\n  projectId: \"reachzone-a5637\",\n  storageBucket: \"reachzone-a5637.appspot.com\",\n  messagingSenderId: \"282619171712\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig); //initialize configurations\n\n    this.auth = app.auth(); //this.db = app.firestore();\n  }\n\n  async login(email, password) {\n    await this.auth.signInWithEmailAndPassword(email, password).then(user => {\n      localStorage.setItem('userid', user.user.uid);\n      localStorage.setItem('name', user.user.displayName);\n    }).catch(err => console.log(err));\n  }\n\n  async logout() {\n    await this.auth.signOut().then(() => {\n      localStorage.removeItem('userid');\n      localStorage.removeItem('name');\n    }) //on success remove name from local storage\n    .catch(err => console.log(err));\n  }\n\n  async register(name, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password).then(async user => {\n      try {\n        await this.auth.currentUser.updateProfile({\n          displayName: name\n        }); //changes the display name\n      } catch (err) {\n        console.log(err);\n      }\n\n      localStorage.setItem('userid', user.user.uid);\n      localStorage.setItem('name', user.user.displayName);\n    });\n  }\n\n  createTodo(title) {\n    this.auth.onAuthStateChanged(function (user) {\n      if (user) {\n        app.firestore().collection(\"Todolist\").add({\n          uid: user.uid,\n          title: title\n        }).then(() => console.log(\"Document successfully added\")).catch(err => console.log(err));\n      } else {\n        console.log('not logged in');\n      }\n    });\n  }\n\n  getTodo() {\n    app.firestore().collection(\"Todolist\").get().then(data => {\n      return data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n    }).catch(err => console.log(err));\n  }\n\n  n() {\n    console.log(this.getTodo);\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/south/PycharmProjects/untitled/project/forkedrepo/frontend/src/components/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","constructor","initializeApp","auth","login","email","password","signInWithEmailAndPassword","then","user","localStorage","setItem","uid","displayName","catch","err","console","log","logout","signOut","removeItem","register","name","createUserWithEmailAndPassword","currentUser","updateProfile","createTodo","title","onAuthStateChanged","firestore","collection","add","getTodo","get","data","docs","map","doc","id","n"],"mappings":"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","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA7XPj2zFd26B9bh_zDQ2aDf38uACH3dYI\",\n  authDomain: \"reachzone-a5637.firebaseapp.com\",\n  databaseURL: \"https://reachzone-a5637.firebaseio.com\",\n  projectId: \"reachzone-a5637\",\n  storageBucket: \"reachzone-a5637.appspot.com\",\n  messagingSenderId: \"282619171712\",\n};\n\nclass Firebase {\n\tconstructor() {\n\t\tapp.initializeApp(firebaseConfig); //initialize configurations\n\t\tthis.auth = app.auth();\n\t\t//this.db = app.firestore();\n\t}\n\n\tasync login(email, password) {\n\t\tawait this.auth.signInWithEmailAndPassword(email, password)\n\t\t.then((user) => {\n\t\t\tlocalStorage.setItem('userid', user.user.uid);\n\t\t\tlocalStorage.setItem('name', user.user.displayName);\n\t\t})\n\t\t.catch((err) => console.log(err));\n\t}\n\n\tasync logout() {\n\t\tawait this.auth.signOut()\n\t\t.then(() => {\n\t\t\tlocalStorage.removeItem('userid');\n\t\t\tlocalStorage.removeItem('name');\n\t\t}) //on success remove name from local storage\n\t\t.catch((err) => console.log(err));\n\t}\n\n\tasync register(name, email, password) {\n\n\t\tawait this.auth.createUserWithEmailAndPassword(email, password)\n\t\t.then(async (user) => {\n\t\t\ttry {\n\n\t\t\t\tawait this.auth.currentUser.updateProfile({\n\t\t\t\t\tdisplayName: name\n\t\t\t\t}); //changes the display name\n\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t\tlocalStorage.setItem('userid', user.user.uid);\n\t\t\tlocalStorage.setItem('name', user.user.displayName);\n\t\t})\n\t\t\n\t}\n\n\tcreateTodo(title) {\n\t\tthis.auth.onAuthStateChanged(function(user) {\n\t\t  if (user) {\n\n\t\t    app.firestore().collection(\"Todolist\").add({\n\t\t\t    uid : user.uid,\n\t\t\t    title : title\n\t\t\t})\n\t\t\t.then(() => console.log(\"Document successfully added\"))\n\t\t\t.catch((err) => console.log(err));\n\n\t\t  } else {\n\t\t    console.log('not logged in');\n\t\t  }\n\n\t\t});\n\t}\n\n\tgetTodo(){\n\t\tapp.firestore().collection(\"Todolist\").get()\n\t\t.then((data) => {\n\t\t\treturn data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n\n\t\t})\n\t\t.catch((err) => console.log(err));\n\t}\n\n\tn(){\n\t\tconsole.log(this.getTodo)\n\t}\n}\n\nexport default new Firebase()"]},"metadata":{},"sourceType":"module"}